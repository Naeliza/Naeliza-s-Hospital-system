<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAlta.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>