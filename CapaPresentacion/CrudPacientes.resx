<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCita.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>